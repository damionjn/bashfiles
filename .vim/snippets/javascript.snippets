# Use strict
snippet u
	'use strict'

	${1}
#
# console log
snippet cl
	console.log(${1})
#
# Parameter Comment
snippet pdoc
	/**
	 ${1}
	 */
#
# Anonymous function
snippet f
	function (${1}) {
		${2}
	}
#
# Function declaration
snippet fun
	function ${1}(${2}) {
		${3}
	}
#
# Function expression
snippet vf
	var = ${1} function (${2}) {
		${3}
	}
#
# Self-invoking Function
snippet si
	!function (${1}) {
		${2}
	}()
#
# Node require
snippet vr
	var ${1:} = require('$1')
#
# Export
snippet mod
	module.exports = ${1}
#
# Function export
snippet modf
	module.exports = function (${1}) {
		${2}
	}
#
# Unit describe
snippet des
	describe('${1}', function () {
		${2}
	})
#
# Unit assertion
snippet it
	it('${1}', function () {
		${2}
	})
#
# Angular unit beforeEach
snippet bei
	beforeEach(inject(function (${1}) {
		${2}
	}))
#
# Prototype
snippet proto
	${1}.prototype.${2} = function (${3}) {
		${4}
	}
#
# if
snippet if
	if (${1}) {
		${2}
	}
#
# if else
snippet ife
	if (${1}) {
		${2}
	} else {
		${3}
	}
#
# ternary conditional
snippet ter
	${1}
		? ${2}
		: ${3}
#
# switch
snippet switch
	switch (${1}) {
		case '${3}':
			${4}
			break
		${5}
		default:
			${2}
	}
#
# for loop
snippet for
	for (var i=0; i < ${1:}.length; i++) {
		$1[i]
	}
# Improved native for-loop
snippet forr
	for (var ${2:} = ${1:}.length - 1; $2 >= 0; $2--) {
		${3:$1[$2]}
	}
#
# setTimeout function
snippet timeout
	setTimeout(function () {
		${3}
	}${2}, ${1:500})
#
# Get by ID
snippet getid
	document.getElementById('${1}')
#
# Get by Tag name
snippet gettag
	document.getElementsByTagName('${1}')
#
# Get by Class name
snippet getclass
	document.getElementsByClassName('${1}')
#
# Query Selector
snippet qs
	document.querySelector('${1}')
#
# Query Selector
snippet qsa
	document.querySelectorAll('${1}')
#
# Bind
snippet .b
	.bind(${1})
